<domain application-root="${com.sun.aas.instanceRoot}/applications" version="380" log-root="${com.sun.aas.instanceRoot}/logs">
  <hazelcast-runtime-configuration hazelcast-configuration-file="hazelcast.xml"></hazelcast-runtime-configuration>
  <security-configurations>
    <authentication-service default="true" name="adminAuth" use-password-credential="true">
      <security-provider provider-name="adminSpc" name="spcrealm" type="LoginModule">
        <login-module-config module-class="com.sun.enterprise.admin.util.AdminLoginModule" control-flag="sufficient" name="adminSpecialLM">
          <property name="config" value="server-config"></property>
          <property name="auth-realm" value="admin-realm"></property>
        </login-module-config>
      </security-provider>
      <security-provider provider-name="adminFile" name="filerealm" type="LoginModule">
        <login-module-config module-class="com.sun.enterprise.security.auth.login.FileLoginModule" control-flag="sufficient" name="adminFileLM">
          <property name="config" value="server-config"></property>
          <property name="auth-realm" value="admin-realm"></property>
        </login-module-config>
      </security-provider>
    </authentication-service>
    <authorization-service default="true" name="authorizationService">
      <security-provider provider-name="simpleAuthorizationProvider" name="simpleAuthorization" type="Simple">
        <authorization-provider-config name="simpleAuthorizationProviderConfig" support-policy-deploy="false"></authorization-provider-config>
      </security-provider>
    </authorization-service>
  </security-configurations>
  <managed-job-config></managed-job-config>
  <system-applications>
    <application context-root="" object-type="system-admin" name="__admingui" directory-deployed="true" location="${com.sun.aas.installRootURI}/lib/install/applications/__admingui">
      <module name="__admingui">
        <engine sniffer="web"></engine>
        <engine sniffer="security"></engine>
      </module>
    </application>
  </system-applications>
  <resources>
    <jdbc-resource pool-name="__TimerPool" object-type="system-admin" jndi-name="jdbc/__TimerPool"></jdbc-resource>
    <jdbc-resource pool-name="__CallFlowPool" object-type="system-all" jndi-name="jdbc/__CallFlowPool"></jdbc-resource>
    <jdbc-resource pool-name="DerbyPool" jndi-name="jdbc/__default"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_hw1" jndi-name="jdbc/mysqlDS"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_hw2" jndi-name="jdbc/mysqlDS2"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_hw2NonXA" jndi-name="jdbc/mysqlDS2NonXa"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_reports" description="" jndi-name="jdbc/mysqlrpt"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_document" jndi-name="jdbc/documentDS"></jdbc-resource>
    <jdbc-resource pool-name="qatrunk_gx_audit" description="" jndi-name="jdbc/auditLogDS"></jdbc-resource>
    <jdbc-resource pool-name="asterisk_integration" description="" jndi-name="jdbc/asterisk_integration"></jdbc-resource>
    <mail-resource host="smtp.mailtrap.io" from="chengchang@paypal.com" user="c17421cf8eee48" jndi-name="mail/HWMailSession">
      <property name="mail.smtp.password" value="0c78c99ee04bc8"></property>
      <property name="mail.smtp.auth" value="true"></property>
    </mail-resource>
    <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.apache.derby.jdbc.ClientDataSource" name="DerbyPool" res-type="javax.sql.DataSource">
      <property name="PortNumber" value="1527"></property>
      <property name="Password" value="APP"></property>
      <property name="User" value="APP"></property>
      <property name="serverName" value="localhost"></property>
      <property name="DatabaseName" value="sun-appserv-samples"></property>
      <property name="connectionAttributes" value=";create=true"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.h2.jdbcx.JdbcDataSource" name="H2Pool" res-type="javax.sql.DataSource">
      <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/embedded_default;AUTO_SERVER=TRUE"></property>
    </jdbc-connection-pool>
    <connector-connection-pool resource-adapter-name="jmsra" max-pool-size="250" steady-pool-size="1" name="jms/__defaultConnectionFactory-Connection-Pool" connection-definition-name="javax.jms.ConnectionFactory"></connector-connection-pool>
    <connector-resource pool-name="jms/__defaultConnectionFactory-Connection-Pool" object-type="system-all-req" jndi-name="jms/__defaultConnectionFactory"></connector-resource>
    <context-service object-type="system-all" jndi-name="concurrent/__defaultContextService"></context-service>
    <managed-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedExecutorService"></managed-executor-service>
    <managed-scheduled-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedScheduledExecutorService"></managed-scheduled-executor-service>
    <managed-thread-factory object-type="system-all" jndi-name="concurrent/__defaultManagedThreadFactory"></managed-thread-factory>
    <managed-thread-factory jndi-name="concurrent/tf/DefaultThreadFactory"></managed-thread-factory>
    <managed-executor-service core-pool-size="16" maximum-pool-size="32" jndi-name="concurrent/batchDetailExecutor"></managed-executor-service>
    <managed-executor-service core-pool-size="4" maximum-pool-size="8" jndi-name="concurrent/dailyTransactionSumJobExecutor"></managed-executor-service>
    <managed-executor-service core-pool-size="4" maximum-pool-size="8" jndi-name="concurrent/amltfJobExecutor"></managed-executor-service>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="qatrunk_gx_hw1" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="qatrunk_gx"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="qatrunk_gx"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="qatrunk_gx_hw2" transaction-isolation-level="read-committed" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="qatrunk_gx"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="qatrunk_gx"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="qatrunk_gx_reports" transaction-isolation-level="read-committed" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="qatrunk_gx_rpt"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="qatrunk_gx_rpt"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="qatrunk_gx_audit" transaction-isolation-level="read-committed" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="qatrunk_gx_audit_logs"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="qatrunk_gx_audit_logs"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="qatrunk_gx_document" transaction-isolation-level="read-committed" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="qatrunk_gx_doc"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="qatrunk_gx_doc"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" is-isolation-level-guaranteed="false" max-wait-time-in-millis="5000" non-transactional-connections="true" ping="true" steady-pool-size="0" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="__TimerPool" wrap-jdbc-objects="false" is-connection-validation-required="true" connection-validation-method="auto-commit" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="ejbtimer"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="ejbtimer"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <jdbc-connection-pool max-pool-size="128" ping="true" datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" name="asterisk_integration" transaction-isolation-level="read-committed" res-type="javax.sql.XADataSource">
      <property name="password" value="password"></property>
      <property name="databaseName" value="asterisk_integration"></property>
      <property name="serverName" value="127.0.0.1"></property>
      <property name="datasourceName" value="asterisk_integration"></property>
      <property name="user" value="root"></property>
      <property name="portNumber" value="3306"></property>
      <property name="useSSL" value="false"></property>
      <property name="ZeroDateTimeBehavior" value="round"></property>
    </jdbc-connection-pool>
    <resource-adapter-config resource-adapter-name="hw-hazelcast-jca-rar">
      <property name="client" value="true"></property>
      <property name="configurationLocation" value="hazelcast-client.xml"></property>
      <property name="org.glassfish.connector-connection-pool.validate-at-most-once-period-in-seconds" value="1"></property>
      <property name="org.glassfish.connector-connection-pool.is-connection-validation-required" value="true"></property>
    </resource-adapter-config>
  </resources>
  <servers>
    <server config-ref="server-config" name="server">
      <application-ref ref="__admingui" virtual-servers="__asadmin"></application-ref>
      <resource-ref ref="jdbc/__TimerPool"></resource-ref>
      <resource-ref ref="jdbc/__default"></resource-ref>
      <resource-ref ref="jdbc/__derby"></resource-ref>
      <resource-ref ref="jdbc/__CallFlowPool"></resource-ref>
      <resource-ref ref="jms/__defaultConnectionFactory"></resource-ref>
      <resource-ref ref="concurrent/__defaultContextService"></resource-ref>
      <resource-ref ref="concurrent/__defaultManagedExecutorService"></resource-ref>
      <resource-ref ref="concurrent/__defaultManagedScheduledExecutorService"></resource-ref>
      <resource-ref ref="concurrent/__defaultManagedThreadFactory"></resource-ref>
      <resource-ref ref="concurrent/tf/DefaultThreadFactory"></resource-ref>
      <resource-ref ref="concurrent/batchDetailExecutor"></resource-ref>
      <resource-ref ref="concurrent/dailyTransactionSumJobExecutor"></resource-ref>
      <resource-ref ref="concurrent/amltfJobExecutor"></resource-ref>
      <resource-ref ref="jdbc/mysqlDS"></resource-ref>
      <resource-ref ref="jdbc/mysqlDS2NonXa"></resource-ref>
      <resource-ref ref="jdbc/mysqlDS2"></resource-ref>
      <resource-ref ref="jdbc/auditDS"></resource-ref>
      <resource-ref ref="jdbc/mysqlrpt"></resource-ref>
      <resource-ref ref="jdbc/documentDS"></resource-ref>
      <resource-ref ref="jdbc/asterisk_integration"></resource-ref>
      <resource-ref ref="jdbc/auditLogDS"></resource-ref>
      <resource-ref ref="mail/HWMailSession"></resource-ref>
    </server>
  </servers>
  <nodes>
    <node name="localhost-domain1" install-dir="${com.sun.aas.productRoot}" type="CONFIG" node-host="localhost"></node>
  </nodes>
  <configs>
    <config name="server-config">
      <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="7676"></system-property>
      <payara-executor-service-configuration></payara-executor-service-configuration>
      <http-service sso-enabled="true" access-logging-enabled="true">
        <access-log buffer-size-bytes="0" format="%client.name% %auth-user-name% %datetime% %http-method% %http-uri% %http-version% %status% %response.length%" rotation-interval-in-minutes="15"></access-log>
        <virtual-server network-listeners="http-listener-1,http-listener-2" id="server">
          <property name="sso-reap-interval-seconds" value="60"></property>
          <property name="sso-max-inactive-seconds" value="1200"></property>
        </virtual-server>
        <virtual-server network-listeners="admin-listener" sso-enabled="true" id="__asadmin"></virtual-server>
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1"></orb>
        <iiop-listener address="127.0.0.1" port="36231" id="hw1"></iiop-listener>
        <iiop-listener address="0.0.0.0" port="3700" lazy-init="true" id="orb-listener-1"></iiop-listener>
        <ssl></ssl>
        <iiop-listener address="0.0.0.0" port="3820" id="SSL" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
        </iiop-listener>
        <iiop-listener address="0.0.0.0" port="3920" id="SSL_MUTUALAUTH" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true"></ssl>
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system" type="das-and-server">
        <jmx-connector address="0.0.0.0" port="8686" name="system" auth-realm-name="admin-realm">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="s1as"></ssl>
        </jmx-connector>
        <property name="adminConsoleContextRoot" value="/admin"></property>
        <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"></property>
        <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."></property>
        <das-config></das-config>
      </admin-service>
      <connector-service></connector-service>
      <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"></transaction-service>
      <asadmin-recorder-configuration></asadmin-recorder-configuration>
      <request-tracing-service-configuration>
        <log-notifier></log-notifier>
      </request-tracing-service-configuration>
      <notification-service-configuration enabled="true">
        <log-notifier-configuration enabled="true"></log-notifier-configuration>
      </notification-service-configuration>
      <hazelcast-config-specific-configuration></hazelcast-config-specific-configuration>
      <monitoring-service-configuration></monitoring-service-configuration>
      <microprofile-metrics-configuration></microprofile-metrics-configuration>
      <amx-configuration></amx-configuration>
      <rest-monitoring-configuration></rest-monitoring-configuration>
      <batch-runtime-configuration schema-name="qatrunk_gx" data-source-lookup-name="jdbc/mysqlDS2"></batch-runtime-configuration>
      <microprofile-fault-tolerance-configuration></microprofile-fault-tolerance-configuration>
      <microprofile-openapi-configuration></microprofile-openapi-configuration>
      <metrics-health-check-configuration></metrics-health-check-configuration>
      <zendesk-support-configuration></zendesk-support-configuration>
      <stuck-threads-checker></stuck-threads-checker>
      <health-check-service-configuration>
        <log-notifier></log-notifier>
      </health-check-service-configuration>
      <phone-home-runtime-configuration phone-home-id="6c98cfca-9fcd-4fa6-9ee2-71b4b5bd88b8"></phone-home-runtime-configuration>
      <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host port="${JMS_PROVIDER_PORT}" name="default_JMS_host" host="localhost"></jms-host>
      </jms-service>
      <ejb-container max-pool-size="120" pool-resize-quantity="16" steady-pool-size="10">
        <ejb-timer-service>
          <property name="ejb-timer-service-upgraded" value="true"></property>
        </ejb-timer-service>
      </ejb-container>
      <rest-config></rest-config>
      <web-container>
        <session-config>
          <session-manager>
            <store-properties></store-properties>
            <manager-properties></manager-properties>
          </session-manager>
          <session-properties timeout-in-seconds="1200"></session-properties>
        </session-config>
      </web-container>
      <microprofile-config></microprofile-config>
      <environment-warning-configuration></environment-warning-configuration>
      <cdi-service></cdi-service>
      <diagnostic-service></diagnostic-service>
      <security-service default-realm="hwRealm">
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"></property>
          <property name="jaas-context" value="fileRealm"></property>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"></property>
          <property name="jaas-context" value="fileRealm"></property>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate">
          <property name="assign-groups" description="null" value="super_admin"></property>
        </auth-realm>
        <auth-realm classname="com.hw2.login.jaas.HWRealm" name="hwRealm"></auth-realm>
        <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"></property>
        </jacc-provider>
        <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"></jacc-provider>
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property name="auditOn" value="false"></property>
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="dynamic.username.password" value="false"></property>
            <property name="debug" value="false"></property>
          </provider-config>
          <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="dynamic.username.password" value="false"></property>
            <property name="debug" value="false"></property>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
          </provider-config>
          <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="debug" value="false"></property>
          </provider-config>
          <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="debug" value="false"></property>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
          </provider-config>
        </message-security-config>
        <message-security-config auth-layer="HttpServlet">
          <provider-config provider-type="server" provider-id="GFConsoleAuthModule" class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
            <request-policy auth-source="sender"></request-policy>
            <response-policy></response-policy>
            <property name="loginPage" value="/login.jsf"></property>
            <property name="loginErrorPage" value="/loginError.jsf"></property>
          </provider-config>
          <provider-config provider-type="server" provider-id="HWSam" class-name="com.hw2.login.sam.HWSam">
            <request-policy></request-policy>
            <response-policy></response-policy>
          </provider-config>
          <provider-config provider-type="server" provider-id="HW2Sam" class-name="com.hw2.login.sam.HW2Sam">
            <request-policy></request-policy>
            <response-policy></response-policy>
          </provider-config>
        </message-security-config>
        <property name="default-digest-algorithm" value="SHA-256"></property>
      </security-service>
      <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9009" debug-enabled="true" system-classpath="">
        <jvm-options>-Dmyproject.root=/Users/chengchang/IntellijWorkspace</jvm-options>
        <jvm-options>-Djava.net.preferIPv4Stack=true</jvm-options>
        <jvm-options>-client</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
        <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.shell.remote,org.apache.felix.fileinstall</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
        <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
        <jvm-options>-Dcron.processor=true</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>-Dcom.sun.management.jmxremote.ssl=false</jvm-options>
        <jvm-options>-XX:LogFile=${com.sun.aas.instanceRoot}/logs/jvm.log</jvm-options>
        <jvm-options>-Djava.rmi.server.hostname=localhost</jvm-options>
        <jvm-options>-Dcom.sun.xml.ws.transport.http.HttpAdapter.dump=true</jvm-options>
        <jvm-options>-XX:+LogVMOutput</jvm-options>
        <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <jvm-options>-Dproduct.name=</jvm-options>
        <jvm-options>-Xmx3G</jvm-options>
        <jvm-options>-noverify</jvm-options>
        <jvm-options>-Dcom.ctc.wstx.returnNullForDefaultNamespace=true</jvm-options>
        <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
        <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
        <jvm-options>-Dcom.hw2.keymanager.passphrase.masterkey1=masterKeyPassphrase1</jvm-options>
        <jvm-options>-Dcom.hw2.keymanager.passphrase.masterkey2=masterKeyPassphrase2</jvm-options>
        <jvm-options>-DIS_HAZELCAST_CONSUMER=true</jvm-options>
        <jvm-options>-DHAZELCAST_THREAD_TERMINATION_TIME=10</jvm-options>
        <jvm-options>-DIS_WEB=true</jvm-options>
        <jvm-options>-DIS_PRODUCER=true</jvm-options>
        <jvm-options>-DIS_KEY_MANAGER=true</jvm-options>
        <jvm-options>-Ddeployment.resource.validation=false</jvm-options>
      </java-config>
      <availability-service>
        <web-container-availability></web-container-availability>
        <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"></ejb-container-availability>
      </availability-service>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http max-connections="250" default-virtual-server="server">
              <file-cache></file-cache>
            </http>
            <ssl></ssl>
          </protocol>
          <protocol name="http-listener-2" security-enabled="true">
            <http max-connections="250" default-virtual-server="server">
              <file-cache></file-cache>
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
          </protocol>
          <protocol name="admin-listener">
            <http encoded-slash-enabled="true" max-connections="250" default-virtual-server="__asadmin">
              <file-cache></file-cache>
            </http>
          </protocol>
          <protocol name="sec-admin-listener" security-enabled="true">
            <http encoded-slash-enabled="true" default-virtual-server="__asadmin">
              <file-cache></file-cache>
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="s1as"></ssl>
          </protocol>
          <protocol name="admin-http-redirect">
            <http-redirect secure="true"></http-redirect>
          </protocol>
          <protocol name="pu-protocol">
            <port-unification>
              <protocol-finder protocol="sec-admin-listener" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="http-finder"></protocol-finder>
              <protocol-finder protocol="admin-http-redirect" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="admin-http-redirect"></protocol-finder>
            </port-unification>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener protocol="http-listener-1" port="8080" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp"></network-listener>
          <network-listener protocol="http-listener-2" port="8181" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp"></network-listener>
          <network-listener protocol="pu-protocol" port="4848" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp"></network-listener>
        </network-listeners>
        <transports>
          <transport name="tcp"></transport>
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="-1" max-thread-pool-size="20"></thread-pool>
        <thread-pool name="http-thread-pool" max-queue-size="-1" max-thread-pool-size="100"></thread-pool>
        <thread-pool name="thread-pool-1" max-thread-pool-size="200"></thread-pool>
      </thread-pools>
      <group-management-service>
        <failure-detection></failure-detection>
      </group-management-service>
      <monitoring-service>
        <module-monitoring-levels></module-monitoring-levels>
      </monitoring-service>
    </config>
    <config name="default-config">
      <payara-executor-service-configuration></payara-executor-service-configuration>
      <http-service>
        <access-log></access-log>
        <virtual-server network-listeners="http-listener-1, http-listener-2" id="server">
          <property name="default-web-xml" value="${com.sun.aas.instanceRoot}/config/default-web.xml"></property>
        </virtual-server>
        <virtual-server network-listeners="admin-listener" id="__asadmin"></virtual-server>
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1"></orb>
        <iiop-listener address="0.0.0.0" port="${IIOP_LISTENER_PORT}" id="orb-listener-1"></iiop-listener>
        <ssl></ssl>
        <iiop-listener address="0.0.0.0" port="${IIOP_SSL_LISTENER_PORT}" id="SSL" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
        </iiop-listener>
        <iiop-listener address="0.0.0.0" port="${IIOP_SSL_MUTUALAUTH_PORT}" id="SSL_MUTUALAUTH" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true"></ssl>
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system">
        <jmx-connector address="0.0.0.0" port="${JMX_SYSTEM_CONNECTOR_PORT}" name="system" auth-realm-name="admin-realm">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="glassfish-instance"></ssl>
        </jmx-connector>
        <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"></property>
        <das-config></das-config>
      </admin-service>
      <web-container>
        <session-config>
          <session-manager>
            <manager-properties></manager-properties>
            <store-properties></store-properties>
          </session-manager>
          <session-properties></session-properties>
        </session-config>
      </web-container>
      <ejb-container>
        <ejb-timer-service></ejb-timer-service>
      </ejb-container>
      <mdb-container></mdb-container>
      <jms-service addresslist-behavior="priority" default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host port="${JMS_PROVIDER_PORT}" host="localhost" name="default_JMS_host"></jms-host>
      </jms-service>
      <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
        <module-log-levels></module-log-levels>
      </log-service>
      <security-service>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"></property>
          <property name="jaas-context" value="fileRealm"></property>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"></property>
          <property name="jaas-context" value="fileRealm"></property>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"></auth-realm>
        <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"></property>
        </jacc-provider>
        <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"></jacc-provider>
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property name="auditOn" value="false"></property>
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="dynamic.username.password" value="false"></property>
            <property name="debug" value="false"></property>
          </provider-config>
          <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="dynamic.username.password" value="false"></property>
            <property name="debug" value="false"></property>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
          </provider-config>
          <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="debug" value="false"></property>
          </provider-config>
          <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content"></request-policy>
            <response-policy auth-source="content"></response-policy>
            <property name="encryption.key.alias" value="s1as"></property>
            <property name="signature.key.alias" value="s1as"></property>
            <property name="debug" value="false"></property>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
          </provider-config>
        </message-security-config>
      </security-service>
      <transaction-service automatic-recovery="true" tx-log-dir="${com.sun.aas.instanceRoot}/logs"></transaction-service>
      <request-tracing-service-configuration>
        <log-notifier></log-notifier>
      </request-tracing-service-configuration>
      <notification-service-configuration enabled="true">
        <log-notifier-configuration enabled="true"></log-notifier-configuration>
      </notification-service-configuration>
      <hazelcast-config-specific-configuration></hazelcast-config-specific-configuration>
      <monitoring-service-configuration></monitoring-service-configuration>
      <microprofile-metrics-configuration></microprofile-metrics-configuration>
      <batch-runtime-configuration schema-name="qatrunk_gx" data-source-lookup-name="jdbc/mysqlDS2"></batch-runtime-configuration>
      <diagnostic-service></diagnostic-service>
      <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${JAVA_DEBUGGER_PORT}" system-classpath="">
        <jvm-options>-server</jvm-options>
        <jvm-options>-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap.jar</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <jvm-options>-Xmx512m</jvm-options>
        <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.fileinstall</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=${OSGI_SHELL_TELNET_PORT}</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
        <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <jvm-options>-Dfelix.fileinstall.log.level=3</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
        <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
        <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
      </java-config>
      <availability-service>
        <web-container-availability></web-container-availability>
        <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"></ejb-container-availability>
        <jms-availability></jms-availability>
      </availability-service>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http default-virtual-server="server">
              <file-cache></file-cache>
            </http>
            <ssl></ssl>
          </protocol>
          <protocol name="http-listener-2" security-enabled="true">
            <http default-virtual-server="server">
              <file-cache></file-cache>
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
          </protocol>
          <protocol name="admin-listener">
            <http max-connections="250" default-virtual-server="__asadmin">
              <file-cache></file-cache>
            </http>
          </protocol>
          <protocol name="sec-admin-listener" security-enabled="true">
            <http encoded-slash-enabled="true" default-virtual-server="__asadmin">
              <file-cache></file-cache>
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="glassfish-instance"></ssl>
          </protocol>
          <protocol name="admin-http-redirect">
            <http-redirect secure="true"></http-redirect>
          </protocol>
          <protocol name="pu-protocol">
            <port-unification>
              <protocol-finder protocol="sec-admin-listener" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="http-finder"></protocol-finder>
              <protocol-finder protocol="admin-http-redirect" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="admin-http-redirect"></protocol-finder>
            </port-unification>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener protocol="http-listener-1" port="${HTTP_LISTENER_PORT}" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp"></network-listener>
          <network-listener protocol="http-listener-2" port="${HTTP_SSL_LISTENER_PORT}" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp"></network-listener>
          <network-listener protocol="pu-protocol" port="${ASADMIN_LISTENER_PORT}" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp"></network-listener>
        </network-listeners>
        <transports>
          <transport name="tcp"></transport>
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool name="http-thread-pool" max-queue-size="-1" max-thread-pool-size="100"></thread-pool>
        <thread-pool name="thread-pool-1" min-thread-pool-size="2" max-thread-pool-size="200"></thread-pool>
        <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="-1" max-thread-pool-size="20"></thread-pool>
      </thread-pools>
      <group-management-service>
        <failure-detection></failure-detection>
      </group-management-service>
      <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="27676"></system-property>
      <system-property name="ASADMIN_LISTENER_PORT" value="24848"></system-property>
      <system-property name="HTTP_LISTENER_PORT" value="28080"></system-property>
      <system-property name="HTTP_SSL_LISTENER_PORT" value="28181"></system-property>
      <system-property name="IIOP_LISTENER_PORT" value="23700"></system-property>
      <system-property name="IIOP_SSL_LISTENER_PORT" value="23820"></system-property>
      <system-property name="IIOP_SSL_MUTUALAUTH_PORT" value="23920"></system-property>
      <system-property name="JMX_SYSTEM_CONNECTOR_PORT" value="28686"></system-property>
      <system-property name="OSGI_SHELL_TELNET_PORT" value="26666"></system-property>
      <system-property name="JAVA_DEBUGGER_PORT" value="29009"></system-property>
      <monitoring-service>
        <module-monitoring-levels></module-monitoring-levels>
      </monitoring-service>
    </config>
  </configs>
  <property name="administrative.domain.name" value="domain1"></property>
  <secure-admin special-admin-indicator="d2d89fc5-7c32-497c-b1ed-aaf7cb689eac" enabled="true">
    <secure-admin-principal dn="CN=localhost,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK"></secure-admin-principal>
    <secure-admin-principal dn="CN=localhost-instance,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK"></secure-admin-principal>
  </secure-admin>
  <deployment-groups></deployment-groups>
  <clusters></clusters>
  <applications></applications>
</domain>
